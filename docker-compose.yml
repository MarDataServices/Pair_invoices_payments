#AI generated
version: '3.8'

x-airflow-common:
  &airflow-common
  image: apache/airflow:2.7.1
  environment:
    AIRFLOW__CORE__EXECUTOR: LocalExecutor
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'false'
    AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
    AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: ${AIRFLOW__DATABASE__SQL_ALCHEMY_CONN}
  env_file:
    - .env
  volumes:
    - ./dags:/opt/airflow/dags
    - ./etl:/opt/airflow/etl
    - ./data:/opt/airflow/data
    - ./etl/requirements.txt:/requirements.txt
  user: "${AIRFLOW_UID:-50000}"
  depends_on:
    - postgres

services:
  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data

  airflow-init:
    <<: *airflow-common
    container_name: airflow-init
    command: >
      bash -c "
        pip install -r /requirements.txt &&
        airflow db migrate &&
        airflow users create \
          --username admin \
          --password admin \
          --firstname Admin \
          --lastname User \
          --role Admin \
          --email admin@example.com
      "
      
  #--password admin \

  airflow-webserver:
    <<: *airflow-common
    container_name: airflow-webserver
    ports:
      - "8080:8080"
    command: >
      bash -c "
        pip install -r /requirements.txt &&
        airflow webserver
      "

  airflow-scheduler:
    <<: *airflow-common
    container_name: airflow-scheduler
    command: >
      bash -c "
        pip install -r /requirements.txt &&
        airflow scheduler
      "

volumes:
  postgres-db-volume:
